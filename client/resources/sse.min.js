(function(){var api;htmx.defineExtension("sse",{init:function(apiRef){api=apiRef;if(htmx.createEventSource==undefined){htmx.createEventSource=createEventSource}},onEvent:function(name,evt){switch(name){case "htmx:beforeCleanupElement":var internalData=api.getInternalData(evt.target);if(internalData.sseEventSource){internalData.sseEventSource.close()}return;case "htmx:afterProcessNode":createEventSourceOnElement(evt.target)}}});function createEventSource(url){return new EventSource(url,{withCredentials:true})}function splitOnWhitespace(trigger){return trigger.trim().split(/\s+/)}function getLegacySSEURL(elt){var legacySSEValue=api.getAttributeValue(elt,"hx-sse");if(legacySSEValue){var values=splitOnWhitespace(legacySSEValue);for(var i=0;i<values.length;i+=1){var value=values[i].split(/:(.+)/);if(value[0]==="connect"){return value[1]}}}}function getLegacySSESwaps(elt){var legacySSEValue=api.getAttributeValue(elt,"hx-sse");var returnArr=[];if(legacySSEValue){var values=splitOnWhitespace(legacySSEValue);for(var i=0;i<values.length;i+=1){var value=values[i].split(/:(.+)/);if(value[0]==="swap"){returnArr.push(value[1])}}}return returnArr}function createEventSourceOnElement(elt,retryCount){if(elt==null){return null}var internalData=api.getInternalData(elt);var sseURL=api.getAttributeValue(elt,"sse-connect");if(sseURL==undefined){var legacyURL=getLegacySSEURL(elt);if(legacyURL){sseURL=legacyURL}else{return null}}var source=htmx.createEventSource(sseURL);internalData.sseEventSource=source;source.onerror=function(err){api.triggerErrorEvent(elt,"htmx:sseError",{error:err,source:source});if(maybeCloseSSESource(elt)){return}if(source.readyState===EventSource.CLOSED){retryCount=retryCount||0;var timeout=Math.random()*(2^retryCount)*500;window.setTimeout(function(){createEventSourceOnElement(elt,Math.min(7,retryCount+1))},timeout)}};source.onopen=function(evt){api.triggerEvent(elt,"htmx:sseOpen",{source:source})};queryAttributeOnThisOrChildren(elt,"sse-swap").forEach(function(child){var sseSwapAttr=api.getAttributeValue(child,"sse-swap");if(sseSwapAttr){var sseEventNames=sseSwapAttr.split(",")}else{var sseEventNames=getLegacySSESwaps(child)}for(var i=0;i<sseEventNames.length;i+=1){var sseEventName=sseEventNames[i].trim();var listener=function(event){if(maybeCloseSSESource(elt)){source.removeEventListener(sseEventName,listener);return}swap(child,event.data);api.triggerEvent(elt,"htmx:sseMessage",event)};api.getInternalData(elt).sseEventListener=listener;source.addEventListener(sseEventName,listener)}});queryAttributeOnThisOrChildren(elt,"hx-trigger").forEach(function(child){var sseEventName=api.getAttributeValue(child,"hx-trigger");if(sseEventName==null){return}if(sseEventName.slice(0,4)!="sse:"){return}var listener=function(event){if(maybeCloseSSESource(elt)){source.removeEventListener(sseEventName,listener);return}htmx.trigger(child,sseEventName,event);htmx.trigger(child,"htmx:sseMessage",event)};api.getInternalData(elt).sseEventListener=listener;source.addEventListener(sseEventName.slice(4),listener)})}function maybeCloseSSESource(elt){if(!api.bodyContains(elt)){var source=api.getInternalData(elt).sseEventSource;if(source!=undefined){source.close();return true}}return false}function queryAttributeOnThisOrChildren(elt,attributeName){var result=[];if(api.hasAttribute(elt,attributeName)||api.hasAttribute(elt,"hx-sse")){result.push(elt)}elt.querySelectorAll("["+attributeName+"], [data-"+attributeName+"], [hx-sse], [data-hx-sse]").forEach(function(node){result.push(node)});return result}function swap(elt,content){api.withExtensions(elt,function(extension){content=extension.transformResponse(content,null,elt)});var swapSpec=api.getSwapSpecification(elt);var target=api.getTarget(elt);var settleInfo=api.makeSettleInfo(elt);api.selectAndSwap(swapSpec.swapStyle,target,elt,content,settleInfo);settleInfo.elts.forEach(function(elt){if(elt.classList){elt.classList.add(htmx.config.settlingClass)}api.triggerEvent(elt,'htmx:beforeSettle')});if(swapSpec.settleDelay>0){setTimeout(doSettle(settleInfo),swapSpec.settleDelay)}else{doSettle(settleInfo)()}}function doSettle(settleInfo){return function(){settleInfo.tasks.forEach(function(task){task.call()});settleInfo.elts.forEach(function(elt){if(elt.classList){elt.classList.remove(htmx.config.settlingClass)}api.triggerEvent(elt,'htmx:afterSettle')})}}})();